---
Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
       - Key: name
         Value: production
  mySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "ap-northeast-1a"
      Tags:
      - Key: name
        Value: production
  mySubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "ap-northeast-1a"
      Tags:
      - Key: name
        Value: production
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: name
        Value: production
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: myVPC
      InternetGatewayId:
        Ref: myInternetGateway
  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myVPC
      Tags:
      - Key: name
        Value: production
  myRoute:
    Type: AWS::EC2::Route
    DependsOn: myInternetGateway
    Properties:
       RouteTableId:
         Ref: myRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: myInternetGateway
  mySubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: mySubnet1
      RouteTableId:
        Ref: myRouteTable
  mySubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: mySubnet2
      RouteTableId:
        Ref: myRouteTable
  assumeRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: assumeRolePolicy
      PolicyDocument: 
        Version: 
        Statement: 
        - Action: 
          - sts:AssumRole
          Principals:  
            Service: eks.amazonaws.com
          Effect: Allow 
      Roles: 
        Ref: 
  AssumeRole: 
    Type: "AWS::IAM::Role"
    Properties: 
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Principal: 
              Service: 
                - "eks.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: eks
      Version: "1.28"
      RoleArn: "arn:aws:iam::012345678910:role/eks-service-role-AWSServiceRoleForAmazonEKS-EXAMPLEBQ4PI"
      ResourcesVpcConfig:
        SecurityGroupIds:
          Ref: mySF
        SubnetIds:
          Ref: mySubnet1
          Ref: mySubnet2
        EndpointPublicAccess: false
        EndpointPrivateAccess: true
        PublicAccessCidrs: [ "1.1.1.2/32" ]
      Logging:
        ClusterLogging:
          EnabledTypes:
            - Type: api
            - Type: audit
      Tags:
        - Key: "key"
          Value: "val"
  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: eks
      NodeRole: 'arn:aws:iam::012345678910:role/eksInstanceRole'
      ScalingConfig:
        MinSize: 3
        DesiredSize: 5
        MaxSize: 7
      Labels:
        Key1: Value1
        Key2: Value2
      Subnets:
        Ref: mySubnet1
        Ref: mySubnet2
