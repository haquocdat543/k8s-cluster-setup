---
Parameters:
  UserData:
    Type: String
Outputs:
  LoadbalancerPublicIp:
    Description: Loadbalancer Public IP
    Value: !GetAtt Loadbalancer.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-Loadbalancer-PublicIp"
  Master1PublicIp:
    Description: Master1 Public IP
    Value: !GetAtt Master1.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-Master1-PublicIp"
  Master2PublicIp:
    Description: Master2 Public IP
    Value: !GetAtt Master2.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-Master2-PublicIp"
  Worker1PublicIp:
    Description: Worker1 Public IP
    Value: !GetAtt Worker1.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-Worker1-PublicIp"
  Worker2PublicIp:
    Description: Worker2 Public IP
    Value: !GetAtt Worker2.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-Worker2-PublicIp"
Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
       - Key: name
         Value: production
  mySubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "ap-northeast-1a"
      Tags:
      - Key: name
        Value: production
  mySubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "ap-northeast-1a"
      Tags:
      - Key: name
        Value: production
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: name
        Value: production
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: myVPC
      InternetGatewayId:
        Ref: myInternetGateway
  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myVPC
      Tags:
      - Key: name
        Value: production
  myRoute:
    Type: AWS::EC2::Route
    DependsOn: myInternetGateway
    Properties:
       RouteTableId:
         Ref: myRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: myInternetGateway
  mySubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: mySubnet1
      RouteTableId:
        Ref: myRouteTable
  mySubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: mySubnet2
      RouteTableId:
        Ref: myRouteTable
